//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AbsMedical.AbsMedicalServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AbsMedicalServiceReference.IAbsMedicalService")]
    public interface IAbsMedicalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbsMedicalService/RegisterAbsMedical", ReplyAction="http://tempuri.org/IAbsMedicalService/RegisterAbsMedicalResponse")]
        bool RegisterAbsMedical(AbsMedical.WCF.MedicalAbs medicalAbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbsMedicalService/RegisterAbsMedical", ReplyAction="http://tempuri.org/IAbsMedicalService/RegisterAbsMedicalResponse")]
        System.Threading.Tasks.Task<bool> RegisterAbsMedicalAsync(AbsMedical.WCF.MedicalAbs medicalAbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbsMedicalService/GetAbsMedicalByStudent", ReplyAction="http://tempuri.org/IAbsMedicalService/GetAbsMedicalByStudentResponse")]
        System.Collections.Generic.List<AbsMedical.WCF.MedicalAbs> GetAbsMedicalByStudent(string studentGuid, string doctorGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbsMedicalService/GetAbsMedicalByStudent", ReplyAction="http://tempuri.org/IAbsMedicalService/GetAbsMedicalByStudentResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AbsMedical.WCF.MedicalAbs>> GetAbsMedicalByStudentAsync(string studentGuid, string doctorGuid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAbsMedicalServiceChannel : AbsMedical.AbsMedicalServiceReference.IAbsMedicalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AbsMedicalServiceClient : System.ServiceModel.ClientBase<AbsMedical.AbsMedicalServiceReference.IAbsMedicalService>, AbsMedical.AbsMedicalServiceReference.IAbsMedicalService {
        
        public AbsMedicalServiceClient() {
        }
        
        public AbsMedicalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AbsMedicalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AbsMedicalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AbsMedicalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterAbsMedical(AbsMedical.WCF.MedicalAbs medicalAbs) {
            return base.Channel.RegisterAbsMedical(medicalAbs);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAbsMedicalAsync(AbsMedical.WCF.MedicalAbs medicalAbs) {
            return base.Channel.RegisterAbsMedicalAsync(medicalAbs);
        }
        
        public System.Collections.Generic.List<AbsMedical.WCF.MedicalAbs> GetAbsMedicalByStudent(string studentGuid, string doctorGuid) {
            return base.Channel.GetAbsMedicalByStudent(studentGuid, doctorGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AbsMedical.WCF.MedicalAbs>> GetAbsMedicalByStudentAsync(string studentGuid, string doctorGuid) {
            return base.Channel.GetAbsMedicalByStudentAsync(studentGuid, doctorGuid);
        }
    }
}
